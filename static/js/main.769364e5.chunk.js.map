{"version":3,"sources":["components/ErrorMsg.jsx","components/EditBlock.jsx","components/Block.jsx","components/PostTitle.jsx","components/Author.jsx","backend/backend.js","components/Post.jsx","components/Card.jsx","components/Modal.jsx","components/ErrorDlg.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorMsg","props","msg","React","createElement","className","EditBlock","block","submit","cancel","errors","addLinksToBlockText","type","copyBlock","JSON","parse","stringify","text","links","previousPosition","forEach","link","nextTextPiece","slice","position","push","concat","description","url","length","join","textWithLinks","_useState","useState","_useState2","_slicedToArray","newBlock","setNewBlock","handleChange","event","id","target","_objectSpread","_defineProperty","value","useEffect","onSubmit","preventDefault","output","textInput","textPieces","split","piece","index","previousPiece","indexOf","pieces","pop","separateLinksFromText","onChange","required","rows","name","language","onClick","map","error","key","Block","jsx","edit","remove","editing","setEditing","showEditing","shift","pos","filter","sort","link1","link2","firstTextPart","lastTextPart","addLinks","dangerouslySetInnerHTML","__html","SyntaxHighlighter","style","vscDarkPlus","Fragment","_id","PostTitle","title","_useState3","_useState4","newTitle","setNewTitle","Author","author","rest","_objectWithoutProperties","username","jobTitle","bio","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","BASE_URL","getJSON","_x","_getJSON","apply","arguments","_asyncToGenerator","_callee","response","json","_context","status","success","statusText","getPost","_x8","_getPost","_callee5","ID","_context5","fetch","mode","headers","Content-Type","createBlock","_x9","_x10","_createBlock","_callee6","token","_context6","post","Authorization","body","deleteBlock","_x11","_x12","_deleteBlock","_callee7","_context7","Post","updateBlock","setPost","content","NEW_EMPTY_BLOCK","_saveBlock","newPost","t0","message","_x2","_remove","_callee2","_context2","findIndex","splice","Card","variant","headerTextLeft","headerTextRight","footerTextLeft","footerTextRight","children","Modal","show","header","footer","ErrorDlg","open","close","App","setErrors","_useState5","_useState6","setOpen","_fetchPost","_post","_errors","fetchPost","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.769364e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ErrorMsg.css\";\n\nconst ErrorMsg = (props) => {\n  const { msg } = props;\n  return <p className=\"error-msg\">{msg}</p>;\n};\n\nexport default ErrorMsg;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./EditBlock.css\";\n\nconst EditBlock = (props) => {\n  const { block, submit, cancel } = props;\n  const { errors } = block;\n\n  function addLinksToBlockText(block) {\n    if (block.type === \"paragraph\") {\n      const copyBlock = JSON.parse(JSON.stringify(block));\n      copyBlock.text = textWithLinks(block);\n      copyBlock.links = [];\n      return copyBlock;\n    } else return block;\n  }\n\n  const [newBlock, setNewBlock] = useState(addLinksToBlockText(block));\n\n  useEffect(() => {\n    setNewBlock(addLinksToBlockText(block));\n  }, [block]);\n\n  function numberOfLines(text) {\n    return text.split(\"\\n\").length;\n  }\n\n  function textWithLinks(block) {\n    if (!block.links) return block.text;\n    const text = [];\n    let previousPosition = 0;\n    block.links.forEach((link) => {\n      const nextTextPiece = block.text.slice(previousPosition, link.position);\n      if (nextTextPiece) text.push(nextTextPiece);\n      text.push(`[${link.description}](${link.url})`);\n      previousPosition = link.position;\n    });\n    const nextTextPiece = block.text.slice(previousPosition, block.text.length);\n    if (nextTextPiece) text.push(nextTextPiece);\n    return text.join(\"\");\n  }\n\n  function separateLinksFromText(textInput) {\n    const textPieces = textInput.split(\"](\");\n    const links = [];\n    let position = 0;\n    textPieces.forEach((piece, index) => {\n      const previousPiece = textPieces[index - 1];\n      if (previousPiece && previousPiece.indexOf(\"[\") !== -1) {\n        const pieces = previousPiece.split(\"[\");\n        textPieces[index - 1] = pieces[0];\n        position += pieces[0].length;\n        links.push({ description: pieces[1] });\n      }\n      if (piece.indexOf(\")\") !== -1) {\n        const pieces = piece.split(\")\");\n        const link = links.pop();\n        if (link) {\n          link.url = pieces[0];\n          link.position = position;\n          links.push(link);\n          textPieces[index] = pieces[1];\n        }\n      }\n    });\n    return { links: links, text: textPieces.join(\"\") };\n  }\n\n  function handleChange(event) {\n    const id = event.target.id;\n    const copyBlock = {\n      ...newBlock,\n      [id]: event.target.value,\n    };\n    setNewBlock(copyBlock);\n  }\n\n  return (\n    <form\n      className=\"edit-block\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (newBlock.type === \"paragraph\") {\n          const copyBlock = JSON.parse(JSON.stringify(newBlock));\n          const output = separateLinksFromText(newBlock.text);\n          copyBlock.text = output.text;\n          copyBlock.links = output.links;\n          submit(copyBlock);\n        } else submit(newBlock);\n      }}\n    >\n      <div className=\"input-container\">\n        {block.type === \"subtitle\" && (\n          <input\n            type=\"text\"\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n            required={true}\n            className=\"edit-block__input\"\n          />\n        )}\n        {block.type !== \"subtitle\" && (\n          <textarea\n            className=\"edit-block__textarea\"\n            rows={numberOfLines(newBlock.text)}\n            value={newBlock.text}\n            onChange={handleChange}\n            id=\"text\"\n          ></textarea>\n        )}\n        <div className=\"type-area\">\n          <select\n            name=\"type\"\n            id=\"type\"\n            value={newBlock.type}\n            onChange={handleChange}\n          >\n            <option value=\"paragraph\">Paragraph</option>\n            <option value=\"subtitle\">Subtitle</option>\n            <option value=\"code\">Code</option>\n          </select>\n          {block.type === \"code\" && (\n            <select\n              name=\"language\"\n              id=\"language\"\n              value={newBlock.language}\n              onChange={handleChange}\n            >\n              <option value=\"html\">HTML</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"javascript\">JavaScript</option>\n            </select>\n          )}\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <button type=\"submit\">Submit</button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setNewBlock(block);\n            cancel();\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      <div className=\"errors-container\">\n        {errors &&\n          errors.map((error, index) => (\n            <ErrorMsg key={index} msg={error.msg} />\n          ))}\n      </div>\n    </form>\n  );\n};\n\nexport default EditBlock;\n","import React, { useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport EditBlock from \"./EditBlock\";\nimport \"./Block.css\";\n\nconst Block = (props) => {\n  const { block, edit, submit, remove } = props;\n  const { type, language, text, links, errors } = block;\n\n  const [editing, setEditing] = useState(false);\n\n  let jsx;\n  const showEditing = editing || (errors && errors.length !== 0);\n  switch (type) {\n    case \"paragraph\":\n      function addLinks(text, links) {\n        let shift = 0; //Shift the position from the original with the combined lengths of the insertations\n        links\n          .map((link) => {\n            return {\n              text: `<a href=\"${link.url}\">${link.description}</a>`,\n              pos: link.position,\n            };\n          })\n          .filter((link) => link.pos >= 0) //Filter out links with incorrect position to avoid unwanted behaviour\n          .sort((link1, link2) => link1.pos - link2.pos) //Sort links to increasing position to avoid unwanted behaviour\n          .forEach((link) => {\n            //Insert links in text\n            const position = link.pos + shift;\n            const firstTextPart = text.slice(0, position) + \" \";\n            const lastTextPart = \" \" + text.slice(position, text.length + 1);\n            text = firstTextPart + link.text + lastTextPart;\n            shift = shift + link.text.length + 2;\n          });\n        return text;\n      }\n      const textWithLinks = addLinks(text, links);\n      jsx = (\n        <p\n          className=\"block__p\"\n          dangerouslySetInnerHTML={{ __html: textWithLinks }}\n        ></p>\n      );\n      break;\n    case \"subtitle\":\n      jsx = <h2 className=\"block__h2\">{text}</h2>;\n      break;\n    case \"code\":\n      jsx = (\n        <div className=\"block__code\">\n          <SyntaxHighlighter language={language} style={vscDarkPlus}>\n            {text}\n          </SyntaxHighlighter>\n        </div>\n      );\n      break;\n    default:\n      jsx = <></>;\n  }\n  return (\n    <div className=\"block\">\n      {!showEditing && jsx}\n      {edit && !showEditing && (\n        <div className=\"block__edit-btns\">\n          <button\n            type=\"button\"\n            className=\"block__button\"\n            onClick={() => setEditing(true)}\n          >\n            Edit\n          </button>\n          {block._id && (\n            <button\n              type=\"button\"\n              className=\"block__button--delete\"\n              onClick={() => remove(block)}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      )}\n      {showEditing && (\n        <EditBlock\n          block={block}\n          submit={(block) => {\n            setEditing(false);\n            submit(block);\n          }}\n          cancel={() => setEditing(false)}\n          className=\"edit-block\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Block;\n","import React, { useState, useEffect } from \"react\";\nimport ErrorMsg from \"./ErrorMsg\";\nimport \"./PostTitle.css\";\n\nconst PostTitle = (props) => {\n  const { title, edit, submit, errors } = props;\n\n  const [editing, setEditing] = useState(errors.length !== 0);\n  const [newTitle, setNewTitle] = useState(title);\n\n  useEffect(() => {\n    setNewTitle(title);\n    setEditing(errors.length !== 0);\n  }, [title, errors]);\n\n  function handleChange(event) {\n    setNewTitle(event.target.value);\n  }\n\n  function cancel() {\n    setNewTitle(title);\n    setEditing(false);\n  }\n\n  return (\n    <div className=\"post-title\">\n      {!editing && <h1 className=\"post-title__title\">{title}</h1>}\n      {!editing && edit && (\n        <button\n          type=\"button\"\n          className=\"post-title__btn-edit\"\n          onClick={() => setEditing(true)}\n        >\n          Edit\n        </button>\n      )}\n      {editing && (\n        <>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              setEditing(false);\n              submit(newTitle);\n            }}\n            className=\"post-title__form\"\n          >\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={handleChange}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n            {errors.length === 0 && (\n              <button type=\"button\" onClick={cancel}>\n                Cancel\n              </button>\n            )}\n            <div className=\"post-title__errors\">\n              {errors.map((error, index) => (\n                <ErrorMsg key={index} msg={error.msg} />\n              ))}\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PostTitle;\n","import React from \"react\";\nimport \"./Author.css\";\n\nconst Author = (props) => {\n  const { author, ...rest } = props;\n\n  const { username, name, jobTitle, bio } = author;\n\n  return (\n    <article {...rest}>\n      <h1>{name ? name : username}</h1>\n      <h2>{jobTitle}</h2>\n      <p>{bio}</p>\n    </article>\n  );\n};\n\nexport default Author;\n","const BASE_URL = \"https://radiant-crag-39178.herokuapp.com\";\n\nasync function getJSON(response) {\n\tlet json;\n\tif (response.status === 401) {\n\t\tjson = { success: false, errors: [{ msg: response.statusText }] };\n\t} else json = await response.json();\n\treturn json;\n}\n\nexport async function login(username, password) {\n\tconst response = await fetch(`${BASE_URL}/users/login`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\tbody: JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t}),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function updatePost(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(post),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function updateBlock(block, token) {\n\tconst response = await fetch(\n\t\t`${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n\t\t{\n\t\t\tmethod: \"PUT\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t\tbody: JSON.stringify(block),\n\t\t}\n\t);\n\treturn await getJSON(response);\n}\n\nexport async function getPost(ID) {\n\tconst response = await fetch(`${BASE_URL}/posts/${ID}`, {\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function createBlock(block, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${block.post}/blocks`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(block),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function deleteBlock(block, token) {\n\tconst response = await fetch(\n\t\t`${BASE_URL}/posts/${block.post}/blocks/${block._id}`,\n\t\t{\n\t\t\tmethod: \"DELETE\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: token,\n\t\t\t},\n\t\t}\n\t);\n\treturn await getJSON(response);\n}\n\nexport async function getPosts() {\n\tconst response = await fetch(`${BASE_URL}/posts`, {\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function postPosts(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(post),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function deletePosts(post, token) {\n\tconst response = await fetch(`${BASE_URL}/posts/${post._id}`, {\n\t\tmethod: \"DELETE\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function createUser(user) {\n\tconst response = await fetch(`${BASE_URL}/users`, {\n\t\tmethod: \"POST\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify(user),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n\nexport async function updateUser(user, token) {\n\tconst response = await fetch(`${BASE_URL}/users/${user._id}`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(user),\n\t});\n\treturn await getJSON(response);\n}\n\nexport async function updatePostLikes(postId, userId) {\n\tconst response = await fetch(`${BASE_URL}/posts/${postId}/likes`, {\n\t\tmethod: \"PUT\",\n\t\tmode: \"cors\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({ user: userId }),\n\t});\n\tconst json = await response.json();\n\treturn json;\n}\n","import React, { useState } from \"react\";\nimport Block from \"./Block\";\nimport PostTitle from \"./PostTitle\";\nimport Author from \"./Author\";\nimport { createBlock, deleteBlock } from \"../backend/backend\";\nimport \"./Post.css\";\n\nconst Post = (props) => {\n  const { post, submit, updateBlock, errors, setPost, token, edit } = props;\n  const { _id, title, author, content } = post;\n\n  const NEW_EMPTY_BLOCK = {\n    text: \"New Block\",\n    type: \"paragraph\",\n    links: [],\n    language: \" \",\n    post: \"\",\n    errors: [],\n  };\n\n  const [newBlock, setNewBlock] = useState(NEW_EMPTY_BLOCK);\n\n  async function saveBlock(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    try {\n      const response = await createBlock(newBlock, token);\n      if (response.success) {\n        newPost.content.push(response.block);\n        setNewBlock(NEW_EMPTY_BLOCK);\n        newBlock.errors = [];\n      } else {\n        newBlock.errors = response.errors;\n      }\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors.length !== 0) setNewBlock(newBlock);\n      setPost(newPost);\n    }\n  }\n\n  async function remove(block) {\n    const newBlock = JSON.parse(JSON.stringify(block));\n    newBlock.post = _id;\n    const newPost = JSON.parse(JSON.stringify(post));\n    const index = newPost.content.findIndex(\n      (block) => block._id === newBlock._id\n    );\n    try {\n      const response = await deleteBlock(newBlock, token);\n      if (response.success) newPost.content.splice(index, 1);\n      else newBlock.errors = response.errors;\n    } catch (error) {\n      newBlock.errors = [{ msg: error.message }];\n    } finally {\n      if (newBlock.errors && newBlock.errors.length !== 0)\n        newPost.content[index] = newBlock;\n      setPost(newPost);\n    }\n  }\n\n  return (\n    <div className=\"post\">\n      <Author author={author} className=\"author\" />\n      <article>\n        <PostTitle title={title} edit={edit} submit={submit} errors={errors} />\n        {content.map((block) => (\n          <Block\n            key={block._id}\n            block={block}\n            edit={edit}\n            submit={updateBlock}\n            remove={remove}\n          />\n        ))}\n        {edit && (\n          <Block\n            key=\"new-block\"\n            block={newBlock}\n            edit={edit}\n            submit={saveBlock}\n          />\n        )}\n      </article>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  const {\n    variant,\n    headerTextLeft,\n    headerTextRight,\n    footerTextLeft,\n    footerTextRight,\n    children,\n  } = props;\n\n  return (\n    <div className=\"card\">\n      <div className={`card__header ${variant && variant}`}>\n        <div>{headerTextLeft}</div>\n        <div>{headerTextRight}</div>\n      </div>\n      {children}\n      <div className={`card__footer ${variant && `footer-${variant}`}`}>\n        <div>{footerTextLeft}</div>\n        <div>{footerTextRight}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./Modal.css\";\n\nconst Modal = (props) => {\n  const { show, variant, header, footer, children } = props;\n\n  return (\n    <div className={`modal ${show && \"show\"}`}>\n      <Card variant={variant} headerTextLeft={header} footerTextLeft={footer}>\n        {children}\n      </Card>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nimport ErrorMsg from \"./ErrorMsg\";\n\nconst ErrorDlg = (props) => {\n  const { open, close, error } = props;\n\n  return (\n    <Modal\n      variant=\"danger\"\n      header=\"Error!\"\n      footer=\"Sorry, but it happens sometimes\"\n      show={open}\n    >\n      <div className=\"modal-body\">\n        <ErrorMsg msg={error.msg} />\n        <div className=\"modal-body__button-container\">\n          <button className=\"modal-body__button\" onClick={close}>\n            OK\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ErrorDlg;\n","import React from \"react\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Post from \"./components/Post\";\nimport { getPost } from \"./backend/backend\";\nimport ErrorDlg from \"./components/ErrorDlg\";\n\nfunction App() {\n  const POST_ID = \"63dbaf9412e514c68d95c4ba\";\n\n  const [post, setPost] = useState({\n    title: \"...Loading\",\n    author: {\n      username: \"...Loading\",\n    },\n    content: [],\n  });\n\n  const [errors, setErrors] = useState([]);\n\n  const [open, setOpen] = useState(false);\n\n  function close() {\n    setOpen(false);\n  }\n\n  async function fetchPost(id) {\n    try {\n      const response = await getPost(id);\n      const { success, post, errors } = response;\n      if (!success) {\n        setErrors(errors);\n      } else {\n        setPost(post);\n      }\n    } catch (err) {\n      setErrors([{ msg: err.message }]);\n    }\n  }\n\n  useEffect(() => {\n    fetchPost(POST_ID);\n  }, []);\n\n  useEffect(() => {\n    if (errors.length === 0) return;\n    setOpen(true);\n  }, [errors]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"col\"></div>\n      <Post\n        post={post}\n        submit={() => {}}\n        updateBlock={() => {}}\n        errors={[]}\n        setPost={() => {}}\n        token={\"\"}\n        edit={false}\n      />\n\n      <ErrorDlg\n        open={open}\n        close={close}\n        error={errors.length > 0 ? errors[0] : { msg: \"\" }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}